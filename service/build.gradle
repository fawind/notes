buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'
        classpath 'cz.habarta.typescript-generator:typescript-generator-gradle-plugin:1.+'
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: 'cz.habarta.typescript-generator'

repositories {
    maven {
        url 'https://maven-central.storage.googleapis.com'
    }
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'com.google.appengine:appengine-api-1.0-sdk:+'

    compile 'org.jboss.resteasy:resteasy-jaxrs:3.1.+'
    compile 'org.jboss.resteasy:resteasy-guice:3.1.+'
    compile 'org.jboss.resteasy:resteasy-jackson2-provider:3.0.+'

    compile 'com.google.inject:guice:4.1.+'
    compile 'com.google.guava:guava:22.+'

    testCompile 'junit:junit:4.11'
    testCompile 'org.jukito:jukito:1.0'
    testCompile 'org.assertj:assertj-core:3.6.+'
    testCompile 'org.mockito:mockito-core:1.+'

    testCompile 'com.google.appengine:appengine-api-labs:1.9.+'
    testCompile 'com.google.appengine:appengine-api-stubs:1.9.+'
    testCompile 'com.google.appengine:appengine-testing:1.9.+'
}

appengine {
    run {
//        jvmFlags = ['-Dappengine.fullscan.seconds=5',
//            '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']
        port = 9090
    }

    deploy {
        stopPreviousVersion = true
        promote = true
    }
}

task reloadApp(type: Copy) {
    dependsOn war

    project.afterEvaluate {
        into project.tasks.explodeWar.explodedAppDirectory
        with war
    }
}

generateTypeScript {
    jsonLibrary = 'jackson2'
    outputFile = 'build/typescript/service.ts'
    outputFileType = 'implementationFile'
    outputKind = 'module'
    generateJaxrsApplicationInterface = true
    generateJaxrsApplicationClient = true
    classes = ['api.NotesService']
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
